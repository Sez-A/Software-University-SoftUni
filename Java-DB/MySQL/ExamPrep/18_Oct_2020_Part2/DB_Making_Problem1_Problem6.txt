CREATE DATABASE `soft_uni_store_system`;
USE `soft_uni_store_system`;

# Problem 1
CREATE TABLE `categories`(
`id` INT PRIMARY KEY AUTO_INCREMENT,
`name` VARCHAR(40) NOT NULL UNIQUE 
);

CREATE TABLE `pictures`(
`id` INT PRIMARY KEY AUTO_INCREMENT,
`url` VARCHAR(100) NOT NULL,
`added_on` DATETIME NOT NULL
);

CREATE TABLE `products`(
`id` INT PRIMARY KEY AUTO_INCREMENT,
`name` VARCHAR(40) NOT NULL UNIQUE,
`best_before` DATE,
`price` DECIMAL(10,2) NOT NULL,
`description` TEXT,
`category_id` INT NOT NULL,
`picture_id` INT NOT NULL,
CONSTRAINT `fk_products_categories`
FOREIGN KEY (`category_id`)
REFERENCES `categories`(`id`),
CONSTRAINT `fk_products_pictures` 
FOREIGN KEY (`picture_id`)
REFERENCES `pictures`(`id`)
);

CREATE TABLE `towns`(
`id` INT PRIMARY KEY AUTO_INCREMENT,
`name` VARCHAR(20) NOT NULL 
);

CREATE TABLE `addresses`(
`id` INT PRIMARY KEY AUTO_INCREMENT,
`name` VARCHAR(50) NOT NULL,
`town_id` INT NOT NULL,
CONSTRAINT `fk_addresses_towns` 
FOREIGN KEY(`town_id`) 
REFERENCES `towns`(`id`)
);

CREATE TABLE `stores`(
`id` INT PRIMARY KEY AUTO_INCREMENT,
`name` VARCHAR(20) NOT NULL,
`rating` FLOAT NOT NULL,
`has_parking` TINYINT(1),
`address_id` INT NOT NULL,
CONSTRAINT `fk_stores_addresses`
FOREIGN KEY (`address_id`)
REFERENCES `addresses`(`id`)
);

CREATE TABLE `products_stores`(
`product_id` INT NOT NULL,
`store_id` INT NOT NULL,
CONSTRAINT `pk_products_stores`
PRIMARY KEY(`product_id`,`store_id`),
CONSTRAINT `fk_products_stores_products`
FOREIGN KEY (`product_id`)
REFERENCES `products`(`id`),
CONSTRAINT `fk_products_stores_stores`
FOREIGN KEY (`store_id`)
REFERENCES `stores`(`id`)
);

CREATE TABLE `employees`(
`id` INT PRIMARY KEY AUTO_INCREMENT,
`first_name` VARCHAR(15) NOT NULL,
`middle_name` CHAR(1),
`last_name` VARCHAR(20) NOT NULL,
`salary` DECIMAL(19,2) NOT NULL DEFAULT 0.00,
`hire_date` DATE NOT NULL,
`manager_id` INT,
`store_id` INT NOT NULL,
CONSTRAINT `fk_employees_employees`
FOREIGN KEY (`manager_id`)
REFERENCES `employees`(`id`),
CONSTRAINT `fk_employees_stores`
FOREIGN KEY (`store_id`)
REFERENCES `stores`(`id`)
);

# Problem 2
INSERT INTO `products_stores`(`product_id`, `store_id`)
VALUES
(9,1),
(10,1),
(13,1),
(16,1),
(18,1);

# Problem 3
UPDATE `employees`
SET `manager_id` = 3, `salary` = `salary` - 500
WHERE `store_id` NOT IN(5, 14) AND YEAR(`hire_date`) > 2003;

# Problem 4
DELETE FROM `employees`
WHERE `salary` >= 6000 AND `manager_id` IS NOT NULL;

# Problem 5
SELECT `first_name`, `middle_name`, `last_name`, `salary`, 	`hire_date`
FROM `employees`
ORDER BY `hire_date` DESC;

# Problem 6
SELECT p.`name`, p.`price`, p.`best_before`, CONCAT(LEFT(p.`description`,10), '...') AS `short_description`, pic.`url`
FROM `products` AS p
JOIN `pictures` AS pic
ON p.`picture_id` = pic.`id`
WHERE CHAR_LENGTH(p.`description`) > 100 AND YEAR(pic.`added_on`) < 2019 AND p.`price` > 20
ORDER BY p.`price` DESC;